# leetcode
#include <iostream>
#include <vector>

std::vector<int> incrementByOne(std::vector<int>& digits) {
    int carry = 1;
    int n = digits.size();
    std::vector<int> result;

    for (int i = n - 1; i >= 0; i--) {
        int sum = digits[i] + carry;
        carry = sum / 10;
        result.push_back(sum % 10);
    }

    if (carry) {
        result.push_back(carry);
    }

    // Reverse the result vector to get the correct order
    std::reverse(result.begin(), result.end());

    return result;
}

int main() {
    std::vector<int> digits = {1, 2, 3};

    std::vector<int> result = incrementByOne(digits);

    std::cout << "Input: [";
    for (int i = 0; i < digits.size(); i++) {
        std::cout << digits[i];
        if (i < digits.size() - 1) {
            std::cout << ", ";
        }
    }
    std::cout << "]\n";

    std::cout << "Output: [";
    for (int i = 0; i < result.size(); i++) {
        std::cout << result[i];
        if (i < result.size() - 1) {
            std::cout << ", ";
        }
    }
    std::cout << "]\n";

    return 0;
}
